diff --git a/flysystem.routing.yml b/flysystem.routing.yml
index 0eb3d82..0e0aeaf 100644
--- a/flysystem.routing.yml
+++ b/flysystem.routing.yml
@@ -8,7 +8,7 @@ flysystem.files:
     _access: 'TRUE'
     scheme: '^[a-zA-Z0-9+.-]+$'
   options:
-    _maintenance_access: 'TRUE'
+    _maintenance_access: TRUE
 
 flysystem.serve:
   path: '/_flysystem/{scheme}/{filepath}'
@@ -21,7 +21,7 @@ flysystem.serve:
     scheme: '^[a-zA-Z0-9+.-]+$'
     filepath: .+
   options:
-    _maintenance_access: 'TRUE'
+    _maintenance_access: TRUE
 
 flysystem.config:
   path: '/admin/config/media/file-system/flysystem'
diff --git a/src/Routing/FlysystemRoutes.php b/src/Routing/FlysystemRoutes.php
index d1ad705..fabf2a1 100644
--- a/src/Routing/FlysystemRoutes.php
+++ b/src/Routing/FlysystemRoutes.php
@@ -76,6 +76,25 @@ class FlysystemRoutes implements ContainerInjectionInterface {
     $all_settings = Settings::get('flysystem', []);
 
     foreach ($this->factory->getSchemes() as $scheme) {
+      if ($this->moduleHandler->moduleExists('image')) {
+        // Internal image route.
+        $routes['flysystem.' . $scheme . '.image_style'] = new Route(
+          '/_flysystem/styles/{image_style}/{scheme}',
+          [
+            '_controller' => 'Drupal\image\Controller\ImageStyleDownloadController::deliver',
+            'required_derivative_scheme' => $scheme,
+            '_disable_route_normalizer' => TRUE,
+          ],
+          [
+            '_access' => 'TRUE',
+            'scheme' => '^[a-zA-Z0-9+.-]+$',
+          ],
+          [
+            '_maintenance_access' => TRUE,
+          ]
+        );
+      }
+
       $settings = $all_settings[$scheme];
 
       if ($settings['driver'] !== 'local' || empty($settings['config']['public'])) {
@@ -99,7 +118,7 @@ class FlysystemRoutes implements ContainerInjectionInterface {
           '_access' => 'TRUE',
         ],
         [
-          '_maintenance_access' => 'TRUE'
+          '_maintenance_access' => TRUE,
         ]
       );
 
@@ -109,6 +128,7 @@ class FlysystemRoutes implements ContainerInjectionInterface {
           '/' . $settings['config']['root'] . '/styles/{image_style}/' . $scheme,
           [
             '_controller' => 'Drupal\image\Controller\ImageStyleDownloadController::deliver',
+            'required_derivative_scheme' => $scheme,
             '_disable_route_normalizer' => TRUE,
             'scheme' => $scheme,
           ],
@@ -116,30 +136,12 @@ class FlysystemRoutes implements ContainerInjectionInterface {
             '_access' => 'TRUE',
           ],
           [
-            '_maintenance_access' => 'TRUE'
+            '_maintenance_access' => TRUE,
           ]
         );
       }
     }
 
-    if ($this->moduleHandler->moduleExists('image')) {
-      // Internal image rotue.
-      $routes['flysystem.image_style'] = new Route(
-        '/_flysystem/styles/{image_style}/{scheme}',
-        [
-          '_controller' => 'Drupal\image\Controller\ImageStyleDownloadController::deliver',
-          '_disable_route_normalizer' => TRUE,
-        ],
-        [
-          '_access' => 'TRUE',
-          'scheme' => '^[a-zA-Z0-9+.-]+$',
-        ],
-        [
-          '_maintenance_access' => 'TRUE'
-        ]
-      );
-    }
-
     return $routes;
   }
 
